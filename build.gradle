/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Piasy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.ofg.uptodate'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.squareup.sqldelight'
apply from: '../AndroidCodeQualityConfig/quality.gradle'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }
}

unMock {
    downloadFrom 'https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/6.0.0_r1-robolectric-0/android-all-6.0.0_r1-robolectric-0.jar'

    keep "android.os.Looper"
    keep "android.content.ContentValues"
    keepStartingWith "android.util."
}

dependencies {
    def baseDependencies = rootProject.ext.baseDependencies
    def aptDependencies = rootProject.ext.aptDependencies
    def testDependencies = rootProject.ext.testDependencies

    compile baseDependencies.androidSupportAppCompatV7
    compile(baseDependencies.safelyAndroid) {
        exclude module: 'appcompat-v7'
    }

    compile baseDependencies.javaxAnnotation

    compile(baseDependencies.mvp) {
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    compile baseDependencies.rxJava
    compile(baseDependencies.rxAndroid) {
        exclude module: 'rxjava'
    }
    compile(baseDependencies.rxBinding) {
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'support-annotations'
    }
    compile(baseDependencies.rxBindingAppCompatV7) {
        exclude module: 'appcompat-v7'
        exclude module: 'rxbinding'
    }
    compile(baseDependencies.rxLifeCycle) {
        exclude module: 'rxjava'
        exclude module: 'rxbinding'
        exclude module: 'support-annotations'
    }
    compile(baseDependencies.rxLifeCycleComponent) {
        exclude module: 'rxjava'
        exclude module: 'rxlifecycle'
        exclude module: 'appcompat-v7'
    }
    compile baseDependencies.eventBus
    compile baseDependencies.dagger
    compile baseDependencies.butterKnife

    compile baseDependencies.gson
    compile baseDependencies.okHttp
    compile(baseDependencies.retrofit) {
        exclude module: 'okhttp'
    }
    compile(baseDependencies.retrofitGsonConverter) {
        exclude module: 'gson'
    }
    compile(baseDependencies.retrofitRxJavaAdapter) {
        exclude module: 'rxjava'
    }
    compile(baseDependencies.sqlBrite) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
    }

    compile baseDependencies.threetenabp
    compile baseDependencies.autoBundle
    compile(baseDependencies.onActivityResult) {
        exclude module: 'support-annotations'
    }

    compile baseDependencies.timber
    compile baseDependencies.okHttpLogging
    compile(baseDependencies.ok2Curl) {
        exclude module: 'okhttp'
    }
    compile(baseDependencies.stethoOkhttp) {
        exclude module: 'okhttp'
    }

    provided aptDependencies.autoValue  // used for AndroidStudio sync
    apt aptDependencies.daggerApt
    apt aptDependencies.autoParcelApt
    retrolambdaConfig aptDependencies.retrolambda
    errorprone aptDependencies.errorprone

    testCompile project(':testbase')
    testCompile(testDependencies.junit) {
        exclude module: 'hamcrest-core'
    }
    testCompile testDependencies.mockito
}
